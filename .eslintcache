[{"/Users/harley/group-project/src/index.js":"1","/Users/harley/group-project/src/reportWebVitals.js":"2","/Users/harley/group-project/src/App.js":"3","/Users/harley/group-project/src/pages/Register.jsx":"4","/Users/harley/group-project/src/validator.js":"5","/Users/harley/group-project/src/pages/Login.jsx":"6","/Users/harley/group-project/src/layouts/master/MasterLayout.jsx":"7","/Users/harley/group-project/src/pages/Components/layout/Footer.jsx":"8","/Users/harley/group-project/src/pages/Components/layout/Header.jsx":"9"},{"size":500,"mtime":1608131787932,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608131787932,"results":"12","hashOfConfig":"11"},{"size":415,"mtime":1609318329303,"results":"13","hashOfConfig":"11"},{"size":10193,"mtime":1609240940477,"results":"14","hashOfConfig":"11"},{"size":3243,"mtime":1609162354976,"results":"15","hashOfConfig":"11"},{"size":2603,"mtime":1609318087486,"results":"16","hashOfConfig":"11"},{"size":390,"mtime":1609318520393,"results":"17","hashOfConfig":"11"},{"size":4056,"mtime":1609319147076,"results":"18","hashOfConfig":"11"},{"size":1290,"mtime":1609319157957,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"xwhxop",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/harley/group-project/src/index.js",[],["42","43"],"/Users/harley/group-project/src/reportWebVitals.js",[],"/Users/harley/group-project/src/App.js",["44","45"],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport MasterLayout from './layouts/master/MasterLayout'\nimport Register from './pages/Register'\nimport Login from './pages/Login';\nimport './assets/css/base.scss'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MasterLayout>\n        <Login />\n      </MasterLayout>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/harley/group-project/src/pages/Register.jsx",["46","47","48","49","50","51","52","53","54","55","56","57","58"],"import React, { useState, useEffect } from 'react'\nimport { isEmail, isEmpty, isLength, isContainWhiteSpace, isPasswordMatch, isPhone, isName } from '..//validator.js';\nimport Swal from 'sweetalert2'\n\n// Material UI\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nconst Register = () => {\n  const [formData, setformData] = useState({firstname: \"\", lastname: \"\", username: \"\", phone: \"\", email: \"\", password: \"\", repassword: \"\", DOB: \"2020-01-01\", religion: \"\", preferSite: \"\"})\n  const [errors, seterrors] = useState({firstname: \"\", lastname: \"\", username: \"\",  phone: \"\", email: \"\", password: \"\", repassword: \"\",religion: \"\", preferSite: \"\"})\n  const initialformValidated = {\n    firstname: false,\n    lastname: false,\n    username: false,\n    email: false, \n    password: false,\n    repassword: false,\n    phone:false\n  };\n  const [formValidated, setformValidated] = useState(initialformValidated)\n  const [loading, setloading] = useState(false)\n  const [day, setday] = useState(null)\n  const [month, setmonth] = useState(null)\n  const [year, setyear] = useState(null)\n\n  const handleInputChange = (event) => {\n      const { name, value } = event.target;\n      setformData(prevData => ({\n          ...prevData,\n          [name]: value\n      }))\n      console.log(formData);\n  }\n\n  const validateLoginForm = (e) => {\n      let err = {};\n\n      if (formData.firstname) {\n        if (!isName(formData.firstname)) {\n          err.firstname = \"Please enter a valid first name\";\n        }\n      }\n\n      if (formData.lastname) {\n        if (!isName(formData.lastname)) {\n          err.lastname = \"Please enter a valid last name\";\n        }\n      }\n\n      if (formData.email) {\n        if (!isEmail(formData.email)) {\n          err.email = \"Please enter a valid email\";\n        }\n      }\n\n      if (formData.password) {\n        if (isContainWhiteSpace(formData.password)) {\n          err.password = \"Password should not contain white spaces\";\n        } else if (!isLength(formData.password, { gte: 6, lte: 16, trim: true })) {\n          err.password = \"Password's length must between 6 to 16\";\n        }\n      }\n\n      if (formData.repassword) {\n        if (!isPasswordMatch(formData.password, formData.repassword)) {\n          err.repassword = \"Your password does not match\"\n        }\n      }\n\n      if (formData.phone) {\n        if (!isPhone(formData.phone)) {\n          err.phone = \"Your phone number is not valid\"\n        }\n      }\n\n      seterrors(err)\n      if (isEmpty(err)) {\n        // change all value of formValidated to initial\n        setformValidated(initialformValidated)\n        return true;\n      } else {\n        // change value based on key of local err object\n        for (const key in err) {\n          setformValidated((prevData) => ({\n            ...prevData,\n            [key]: true\n          }));\n        }\n        return err;\n      }\n  }\n\n  useEffect(() => {\n    return () => {\n      validateLoginForm();\n    }\n  }, [formData])\n  \n  const isFieldEmpty = () => {\n    for (const key in formData) {\n      if (formData[key] === \"\") {\n        seterrors((prevData) => ({\n          ...prevData,\n          [key]: key + \" can't be blank\"\n        }))\n        setformValidated((prevData) => ({\n          ...prevData,\n          [key]: true\n        }));\n      }\n    }\n  }\n  const register = (e) => {\n      e.preventDefault();\n\n      // check if any field is empty\n      // yes => show error\n      // no => submit\n      isFieldEmpty(() => {\n        const err = validateLoginForm();\n        if(err === true) {\n          alert(\"You are successfully signed in...\");\n          // window.location.reload()\n        } else {\n          // alert the first error\n          Swal.fire({\n            title: 'You have failed to sign up',\n            text: err[Object.keys(err)[0]],\n            icon: 'error'\n          })\n        }\n      })\n  }\n  \n  const getOptions = (start, end) => {\n    const options = [];\n    for(let i = start; i <= end; i++) {\n      options.push(<option key={i}>{i}</option>)\n    }\n    return options;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline/>\n          <div className=\"paper\">\n            <Typography component=\"h1\" variant=\"h5\">Đăng Ký</Typography>\n          </div>\n            <form action=\"\">\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField  error={formValidated.firstname}\n                              helperText={errors.firstname}\n                              autoComplete=\"firstname\" \n                              name=\"firstname\" \n                              variant=\"outlined\" \n                              required \n                              fullWidth \n                              id=\"firstname\" \n                              label=\"First Name\" \n                              autoFocus \n                              onChange={handleInputChange} />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField  error={formValidated.lastname}\n                              helperText={errors.lastname}\n                              autoComplete=\"lastname\" \n                              name=\"lastname\" \n                              variant=\"outlined\" \n                              required \n                              fullWidth \n                              id=\"lastname\" \n                              label=\"Last Name\" \n                              autoFocus\n                              onChange={handleInputChange}/>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField  error={formValidated.username}\n                              helperText={errors.username}\n                              autoComplete=\"username\" \n                              name=\"username\" \n                              variant=\"outlined\" \n                              required fullWidth \n                              id=\"username\" \n                              label=\"Username\" \n                              autoFocus\n                              onChange={handleInputChange} />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField  id=\"DOB\"\n                              label=\"DOB\"\n                              name=\"DOB\"\n                              type=\"date\"\n                              required fullWidth \n                              defaultValue=\"2020-01-01\"\n                              onChange={handleInputChange} />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField  error={formValidated.password}\n                              helperText={errors.password}\n                              autoComplete=\"password\" \n                              name=\"password\" \n                              type=\"password\" \n                              variant=\"outlined\" \n                              required \n                              fullWidth \n                              id=\"password\" \n                              label=\"Password\" \n                              autoFocus\n                              onChange={handleInputChange} />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField  error={formValidated.repassword}\n                              helperText={errors.repassword}\n                              autoComplete=\"repassword\" \n                              name=\"repassword\" \n                              type=\"password\" \n                              variant=\"outlined\" \n                              required \n                              fullWidth \n                              id=\"repassword\" \n                              label=\"Re-type Password\" \n                              autoFocus\n                              onChange={handleInputChange} />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField  error={formValidated.email}\n                              helperText={errors.email}\n                              autoComplete=\"email\" \n                              name=\"email\" \n                              variant=\"outlined\" \n                              required \n                              fullWidth \n                              id=\"email\" \n                              label=\"Email\" \n                              autoFocus\n                              onChange={handleInputChange} />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField  error={formValidated.phone}\n                              helperText={errors.phone}\n                              autoComplete=\"phone\" \n                              name=\"phone\"\n                              variant=\"outlined\" \n                              required \n                              fullWidth \n                              id=\"phone\" \n                              label=\"Phone Number\" \n                              autoFocus\n                              onChange={handleInputChange} />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <FormControlLabel \n                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />} \n                    label=\"Receive newest notifications and discount\"/>\n                </Grid>\n              </Grid>\n              \n                <Button type=\"submit\" \n                        fullWidth \n                        variant=\"contained\" \n                        color=\"primary\" \n                        className=\"submit\"\n                        onClick={register}>Đăng ký</Button> \n            </form>\n    </Container>\n  )\n}\n\nexport default Register\n","/Users/harley/group-project/src/validator.js",[],"/Users/harley/group-project/src/pages/Login.jsx",["59","60","61","62","63"],"import React, {useState} from 'react';\n\n// Material UI\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\n\n\nconst Login = () => {\n    const [userName, setuserName] = useState(null)\n    const [password, setpassword] = useState(null)\n    \n    return (\n        <div className=\"main\">\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <div className=\"paper\">\n                    <Typography component=\"h1\" variant=\"h5\">Đăng Nhập</Typography>\n                    <form action=\"\">\n                        <TextField variant=\"outlined\" \n                                   margin=\"normal\" \n                                   required fullWidth \n                                   id=\"userName\" \n                                   label=\"Tài Khoản\" \n                                   name=\"userName\" \n                                   autoFocus/>\n\n                        <TextField variant=\"outlined\" \n                                   margin=\"normal\" \n                                   required fullWidth \n                                   name=\"password\" \n                                   label=\"Mật Khẩu\" \n                                   type=\"password\" \n                                   id=\"password\"/>\n\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Ghi nhớ đăng nhập\"\n                        />\n\n                        <Button type=\"submit\" \n                                fullWidth \n                                variant=\"contained\" \n                                color=\"primary\">Đăng Nhập</Button>\n\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Quên mật khẩu?\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default Login\n","/Users/harley/group-project/src/layouts/master/MasterLayout.jsx",[],"/Users/harley/group-project/src/pages/Components/layout/Footer.jsx",["64","65","66","67","68","69","70","71","72","73","74","75","76"],"/Users/harley/group-project/src/pages/Components/layout/Header.jsx",["77","78","79","80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":12},{"ruleId":"86","severity":1,"message":"90","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":16},{"ruleId":"86","severity":1,"message":"91","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},{"ruleId":"86","severity":1,"message":"92","line":12,"column":8,"nodeType":"88","messageId":"89","endLine":12,"endColumn":12},{"ruleId":"86","severity":1,"message":"93","line":14,"column":8,"nodeType":"88","messageId":"89","endLine":14,"endColumn":11},{"ruleId":"86","severity":1,"message":"94","line":31,"column":10,"nodeType":"88","messageId":"89","endLine":31,"endColumn":17},{"ruleId":"86","severity":1,"message":"95","line":31,"column":19,"nodeType":"88","messageId":"89","endLine":31,"endColumn":29},{"ruleId":"86","severity":1,"message":"96","line":32,"column":10,"nodeType":"88","messageId":"89","endLine":32,"endColumn":13},{"ruleId":"86","severity":1,"message":"97","line":32,"column":15,"nodeType":"88","messageId":"89","endLine":32,"endColumn":21},{"ruleId":"86","severity":1,"message":"98","line":33,"column":10,"nodeType":"88","messageId":"89","endLine":33,"endColumn":15},{"ruleId":"86","severity":1,"message":"99","line":33,"column":17,"nodeType":"88","messageId":"89","endLine":33,"endColumn":25},{"ruleId":"86","severity":1,"message":"100","line":34,"column":10,"nodeType":"88","messageId":"89","endLine":34,"endColumn":14},{"ruleId":"86","severity":1,"message":"101","line":34,"column":16,"nodeType":"88","messageId":"89","endLine":34,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":107,"column":6,"nodeType":"104","endLine":107,"endColumn":16,"suggestions":"105"},{"ruleId":"86","severity":1,"message":"106","line":145,"column":9,"nodeType":"88","messageId":"89","endLine":145,"endColumn":19},{"ruleId":"86","severity":1,"message":"91","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":14},{"ruleId":"86","severity":1,"message":"107","line":18,"column":12,"nodeType":"88","messageId":"89","endLine":18,"endColumn":20},{"ruleId":"86","severity":1,"message":"108","line":18,"column":22,"nodeType":"88","messageId":"89","endLine":18,"endColumn":33},{"ruleId":"86","severity":1,"message":"109","line":19,"column":12,"nodeType":"88","messageId":"89","endLine":19,"endColumn":20},{"ruleId":"86","severity":1,"message":"110","line":19,"column":22,"nodeType":"88","messageId":"89","endLine":19,"endColumn":33},{"ruleId":"86","severity":1,"message":"111","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":17,"column":70,"nodeType":"114","endLine":17,"endColumn":82},{"ruleId":"112","severity":1,"message":"113","line":30,"column":45,"nodeType":"114","endLine":30,"endColumn":90},{"ruleId":"112","severity":1,"message":"113","line":31,"column":45,"nodeType":"114","endLine":31,"endColumn":90},{"ruleId":"112","severity":1,"message":"113","line":32,"column":45,"nodeType":"114","endLine":32,"endColumn":90},{"ruleId":"112","severity":1,"message":"113","line":41,"column":45,"nodeType":"114","endLine":41,"endColumn":90},{"ruleId":"112","severity":1,"message":"113","line":42,"column":45,"nodeType":"114","endLine":42,"endColumn":90},{"ruleId":"112","severity":1,"message":"113","line":43,"column":45,"nodeType":"114","endLine":43,"endColumn":90},{"ruleId":"112","severity":1,"message":"113","line":44,"column":45,"nodeType":"114","endLine":44,"endColumn":90},{"ruleId":"112","severity":1,"message":"113","line":52,"column":62,"nodeType":"114","endLine":52,"endColumn":74},{"ruleId":"112","severity":1,"message":"113","line":53,"column":62,"nodeType":"114","endLine":53,"endColumn":74},{"ruleId":"112","severity":1,"message":"113","line":54,"column":62,"nodeType":"114","endLine":54,"endColumn":74},{"ruleId":"112","severity":1,"message":"113","line":55,"column":62,"nodeType":"114","endLine":55,"endColumn":74},{"ruleId":"86","severity":1,"message":"111","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"115","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":15,"column":55,"nodeType":"114","endLine":15,"endColumn":66},{"ruleId":"112","severity":1,"message":"113","line":16,"column":55,"nodeType":"114","endLine":16,"endColumn":66},{"ruleId":"112","severity":1,"message":"113","line":17,"column":55,"nodeType":"114","endLine":17,"endColumn":66},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'Avatar' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'loading' is assigned a value but never used.","'setloading' is assigned a value but never used.","'day' is assigned a value but never used.","'setday' is assigned a value but never used.","'month' is assigned a value but never used.","'setmonth' is assigned a value but never used.","'year' is assigned a value but never used.","'setyear' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validateLoginForm'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'getOptions' is assigned a value but never used.","'userName' is assigned a value but never used.","'setuserName' is assigned a value but never used.","'password' is assigned a value but never used.","'setpassword' is assigned a value but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'searchIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [formData, validateLoginForm]",{"range":"121","text":"122"},[3446,3456],"[formData, validateLoginForm]"]